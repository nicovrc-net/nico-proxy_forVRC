# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "v3" ]
    tags: ['3.*']
  pull_request:
    branches: [ "v3" ]

jobs:
  build-21:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.5.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew shadowJar

      - name: Upload JarFile
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: ./build/libs/NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar

  download_ffmpeg:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download ffmpeg
        run: |
          wget https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz > null
          tar -Jxvf ./ffmpeg-master-latest-linux64-gpl.tar.xz > null
          cp ./ffmpeg-master-latest-linux64-gpl/bin/* ./
          rm ./ffmpeg-master-latest-linux64-gpl.tar.xz
          rm ./ffmpeg-master-latest-linux64-gpl -fr
        shell: bash

      - name: Upload ffmpeg
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg
          path: ./ffmpeg

  download_errorVideo:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download Video
        run: |
          wget https://nicovrc.net/v3-video/error_404.mp4 > null
          wget https://nicovrc.net/v3-video/error_000.mp4 > null
          wget https://nicovrc.net/v3-video/error_404_2.mp4 > null
        shell: bash

      - name: Upload Video
        uses: actions/upload-artifact@v4
        with:
          name: video
          path: ./*.mp4

  autotest1:
    needs: build-21
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: Create config.yml Test
        run: |
          if [ -f ./config.yml ]; then
            echo "OK"
          else 
            exit 1
          fi
        shell: bash

  autotest2:
    needs: build-21
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: Create LogFolder Test
        run: |
          if [ -d ./log ]; then
            echo "OK"
          else
            exit 1
          fi
        shell: bash

  autotest3:
    needs: [build-21, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: URL Request Test
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:25252/?url=https://www.nicovideo.jp/watch/sm9)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Expected HTTP status 200 but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash

  autotest4:
    needs: [build-21, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: URL Request Test (Old Type 1)
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:25252/proxy/?https://www.nicovideo.jp/watch/sm9)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Expected HTTP status 200 but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash

  autotest5:
    needs: [build-21, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: URL Request Test (Old Type 2)
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:25252/?vi=https://www.nicovideo.jp/watch/sm9)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Expected HTTP status 200 but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash

  autotest6:
    needs: [build-21, download_ffmpeg, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download ffmpeg
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: URL Request Test (Error)
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{content_type}" http://localhost:25252/?vi=https://www.nicovideo.jp/watch/sm1)
          if [ "$HTTP_STATUS" -ne "video/mp4" ]; then
            echo "Expected HTTP status video/mp4 but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash

  autotest7:
    needs: [build-21, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: URL Request Test (Title)
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{content_type}" -H "User-Agent: UnityPlayer/2022.3.22f1-DWR (UnityWebRequest/1.0, libcurl/8.5.0-DEV)" http://localhost:25252/?vi=https://www.nicovideo.jp/watch/sm9)
          if [ "$HTTP_STATUS" -ne "text/plain" ]; then
            echo "Expected HTTP status text/plain but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash
  autotest8:
    needs: [build-21, download_errorVideo]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JarFile
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Download Video
        uses: actions/download-artifact@v4
        with:
          name: video

      - name: Set VideoFile
        run: |
          mkdir ./error-video
          mv ./*.mp4 ./error-video
        shell: bash

      - name: Run the Application
        run: java -jar ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar --default-config-mode &
        shell: bash

      - name: Wait for the application to start
        run: sleep 1

      - name: URL Request Test
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{content_type}" -H "User-Agent: UnityPlayer/2022.3.22f1-DWR (UnityWebRequest/1.0, libcurl/8.5.0-DEV)" http://localhost:25252/?vi=https://www.nicovideo.jp/watch/sm9)
          if [ "$HTTP_STATUS" -ne "text/plain" ]; then
            echo "Expected HTTP status text/plain but got $HTTP_STATUS"
            exit 1
          fi
        shell: bash

      - name: stop.txt Create
        run: |
          cat /dev/null > ./stop.txt
        shell: bash

      - name: Wait 2s
        run: sleep 2

      - name: Not stop.txt Found Check
        run: |
          if [ -f ./stop.yml ]; then
            exit 1
          else 
            echo "OK"
          fi
        shell: bash

  release:
    needs: [autotest1, autotest2, autotest3, autotest4, autotest5, autotest6, autotest7, autotest8]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download JarFile
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          body: |
            -
          draft: false
          prerelease: false

      - name: Upload JarFile
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar
          asset_name: NicoVideoPlayForVRC-3.0-SNAPSHOT-all.jar
          asset_content_type: application/java-archive

      - name: Delete File
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            jar
            ffmpeg
            video